name: Java CI/CD with Gradle and Docker

on:
  push:
    branches: [ "main" ] # main 브랜치에 push 또는 merge될 때 워크플로우 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 소스 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. JDK 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. gradlew 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # 4. Gradle로 빌드 (bootJar 태스크 실행)
    - name: Build with Gradle
      run: ./gradlew bootJar

    # 5. Docker Hub 로그인
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 6. Docker 이미지 빌드 및 푸시
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/lol-team-balance-tool-back:latest

    # 7. EC2에 배포
    - name: Deploy to EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/lol_team_balance_tool_back
          sudo chmod +x ./deploy.sh
          sudo bash ./deploy.sh ${{ secrets.DOCKERHUB_USERNAME }}
